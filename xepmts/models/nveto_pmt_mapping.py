# coding: utf-8

"""
    PMT API

    API for the XenonnT PMT database  # noqa: E501

    OpenAPI spec version: 0.1
    Contact: joe.mosbacher@gmail.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class NvetoPmtMapping(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pmt_no': 'int',
        'pmt_location': 'int',
        'pmt_sn': 'int',
        'nominal_voltage': 'float',
        'feedthrough': 'str',
        'flange': 'str',
        'level': 'int',
        'column': 'int',
        'adc_serial': 'int',
        'adc_board': 'int',
        'adc_channel': 'int',
        'hv_serial': 'int',
        'hv_board': 'int',
        'hv_channel': 'int',
        'pulser_no': 'int',
        'pulser_channel': 'str',
        'id': 'str'
    }

    attribute_map = {
        'pmt_no': 'pmt_no',
        'pmt_location': 'pmt_location',
        'pmt_sn': 'pmt_sn',
        'nominal_voltage': 'nominal_voltage',
        'feedthrough': 'feedthrough',
        'flange': 'flange',
        'level': 'level',
        'column': 'column',
        'adc_serial': 'adc_serial',
        'adc_board': 'adc_board',
        'adc_channel': 'adc_channel',
        'hv_serial': 'hv_serial',
        'hv_board': 'hv_board',
        'hv_channel': 'hv_channel',
        'pulser_no': 'pulser_no',
        'pulser_channel': 'pulser_channel',
        'id': '_id'
    }

    def __init__(self, pmt_no=None, pmt_location=None, pmt_sn=None, nominal_voltage=None, feedthrough=None, flange=None, level=None, column=None, adc_serial=None, adc_board=None, adc_channel=None, hv_serial=None, hv_board=None, hv_channel=None, pulser_no=None, pulser_channel=None, id=None):  # noqa: E501
        """NvetoPmtMapping - a model defined in Swagger"""  # noqa: E501
        self._pmt_no = None
        self._pmt_location = None
        self._pmt_sn = None
        self._nominal_voltage = None
        self._feedthrough = None
        self._flange = None
        self._level = None
        self._column = None
        self._adc_serial = None
        self._adc_board = None
        self._adc_channel = None
        self._hv_serial = None
        self._hv_board = None
        self._hv_channel = None
        self._pulser_no = None
        self._pulser_channel = None
        self._id = None
        self.discriminator = None
        if pmt_no is not None:
            self.pmt_no = pmt_no
        if pmt_location is not None:
            self.pmt_location = pmt_location
        if pmt_sn is not None:
            self.pmt_sn = pmt_sn
        if nominal_voltage is not None:
            self.nominal_voltage = nominal_voltage
        if feedthrough is not None:
            self.feedthrough = feedthrough
        if flange is not None:
            self.flange = flange
        if level is not None:
            self.level = level
        if column is not None:
            self.column = column
        if adc_serial is not None:
            self.adc_serial = adc_serial
        if adc_board is not None:
            self.adc_board = adc_board
        if adc_channel is not None:
            self.adc_channel = adc_channel
        if hv_serial is not None:
            self.hv_serial = hv_serial
        if hv_board is not None:
            self.hv_board = hv_board
        if hv_channel is not None:
            self.hv_channel = hv_channel
        if pulser_no is not None:
            self.pulser_no = pulser_no
        if pulser_channel is not None:
            self.pulser_channel = pulser_channel
        if id is not None:
            self.id = id

    @property
    def pmt_no(self):
        """Gets the pmt_no of this NvetoPmtMapping.  # noqa: E501


        :return: The pmt_no of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._pmt_no

    @pmt_no.setter
    def pmt_no(self, pmt_no):
        """Sets the pmt_no of this NvetoPmtMapping.


        :param pmt_no: The pmt_no of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._pmt_no = pmt_no

    @property
    def pmt_location(self):
        """Gets the pmt_location of this NvetoPmtMapping.  # noqa: E501


        :return: The pmt_location of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._pmt_location

    @pmt_location.setter
    def pmt_location(self, pmt_location):
        """Sets the pmt_location of this NvetoPmtMapping.


        :param pmt_location: The pmt_location of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._pmt_location = pmt_location

    @property
    def pmt_sn(self):
        """Gets the pmt_sn of this NvetoPmtMapping.  # noqa: E501


        :return: The pmt_sn of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._pmt_sn

    @pmt_sn.setter
    def pmt_sn(self, pmt_sn):
        """Sets the pmt_sn of this NvetoPmtMapping.


        :param pmt_sn: The pmt_sn of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._pmt_sn = pmt_sn

    @property
    def nominal_voltage(self):
        """Gets the nominal_voltage of this NvetoPmtMapping.  # noqa: E501


        :return: The nominal_voltage of this NvetoPmtMapping.  # noqa: E501
        :rtype: float
        """
        return self._nominal_voltage

    @nominal_voltage.setter
    def nominal_voltage(self, nominal_voltage):
        """Sets the nominal_voltage of this NvetoPmtMapping.


        :param nominal_voltage: The nominal_voltage of this NvetoPmtMapping.  # noqa: E501
        :type: float
        """

        self._nominal_voltage = nominal_voltage

    @property
    def feedthrough(self):
        """Gets the feedthrough of this NvetoPmtMapping.  # noqa: E501


        :return: The feedthrough of this NvetoPmtMapping.  # noqa: E501
        :rtype: str
        """
        return self._feedthrough

    @feedthrough.setter
    def feedthrough(self, feedthrough):
        """Sets the feedthrough of this NvetoPmtMapping.


        :param feedthrough: The feedthrough of this NvetoPmtMapping.  # noqa: E501
        :type: str
        """

        self._feedthrough = feedthrough

    @property
    def flange(self):
        """Gets the flange of this NvetoPmtMapping.  # noqa: E501


        :return: The flange of this NvetoPmtMapping.  # noqa: E501
        :rtype: str
        """
        return self._flange

    @flange.setter
    def flange(self, flange):
        """Sets the flange of this NvetoPmtMapping.


        :param flange: The flange of this NvetoPmtMapping.  # noqa: E501
        :type: str
        """

        self._flange = flange

    @property
    def level(self):
        """Gets the level of this NvetoPmtMapping.  # noqa: E501


        :return: The level of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this NvetoPmtMapping.


        :param level: The level of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._level = level

    @property
    def column(self):
        """Gets the column of this NvetoPmtMapping.  # noqa: E501


        :return: The column of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this NvetoPmtMapping.


        :param column: The column of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._column = column

    @property
    def adc_serial(self):
        """Gets the adc_serial of this NvetoPmtMapping.  # noqa: E501


        :return: The adc_serial of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._adc_serial

    @adc_serial.setter
    def adc_serial(self, adc_serial):
        """Sets the adc_serial of this NvetoPmtMapping.


        :param adc_serial: The adc_serial of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._adc_serial = adc_serial

    @property
    def adc_board(self):
        """Gets the adc_board of this NvetoPmtMapping.  # noqa: E501


        :return: The adc_board of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._adc_board

    @adc_board.setter
    def adc_board(self, adc_board):
        """Sets the adc_board of this NvetoPmtMapping.


        :param adc_board: The adc_board of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._adc_board = adc_board

    @property
    def adc_channel(self):
        """Gets the adc_channel of this NvetoPmtMapping.  # noqa: E501


        :return: The adc_channel of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._adc_channel

    @adc_channel.setter
    def adc_channel(self, adc_channel):
        """Sets the adc_channel of this NvetoPmtMapping.


        :param adc_channel: The adc_channel of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._adc_channel = adc_channel

    @property
    def hv_serial(self):
        """Gets the hv_serial of this NvetoPmtMapping.  # noqa: E501


        :return: The hv_serial of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._hv_serial

    @hv_serial.setter
    def hv_serial(self, hv_serial):
        """Sets the hv_serial of this NvetoPmtMapping.


        :param hv_serial: The hv_serial of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._hv_serial = hv_serial

    @property
    def hv_board(self):
        """Gets the hv_board of this NvetoPmtMapping.  # noqa: E501


        :return: The hv_board of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._hv_board

    @hv_board.setter
    def hv_board(self, hv_board):
        """Sets the hv_board of this NvetoPmtMapping.


        :param hv_board: The hv_board of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._hv_board = hv_board

    @property
    def hv_channel(self):
        """Gets the hv_channel of this NvetoPmtMapping.  # noqa: E501


        :return: The hv_channel of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._hv_channel

    @hv_channel.setter
    def hv_channel(self, hv_channel):
        """Sets the hv_channel of this NvetoPmtMapping.


        :param hv_channel: The hv_channel of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._hv_channel = hv_channel

    @property
    def pulser_no(self):
        """Gets the pulser_no of this NvetoPmtMapping.  # noqa: E501


        :return: The pulser_no of this NvetoPmtMapping.  # noqa: E501
        :rtype: int
        """
        return self._pulser_no

    @pulser_no.setter
    def pulser_no(self, pulser_no):
        """Sets the pulser_no of this NvetoPmtMapping.


        :param pulser_no: The pulser_no of this NvetoPmtMapping.  # noqa: E501
        :type: int
        """

        self._pulser_no = pulser_no

    @property
    def pulser_channel(self):
        """Gets the pulser_channel of this NvetoPmtMapping.  # noqa: E501


        :return: The pulser_channel of this NvetoPmtMapping.  # noqa: E501
        :rtype: str
        """
        return self._pulser_channel

    @pulser_channel.setter
    def pulser_channel(self, pulser_channel):
        """Sets the pulser_channel of this NvetoPmtMapping.


        :param pulser_channel: The pulser_channel of this NvetoPmtMapping.  # noqa: E501
        :type: str
        """

        self._pulser_channel = pulser_channel

    @property
    def id(self):
        """Gets the id of this NvetoPmtMapping.  # noqa: E501


        :return: The id of this NvetoPmtMapping.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NvetoPmtMapping.


        :param id: The id of this NvetoPmtMapping.  # noqa: E501
        :type: str
        """

        self._id = id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NvetoPmtMapping, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NvetoPmtMapping):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
